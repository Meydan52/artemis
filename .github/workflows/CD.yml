# This is a basic workflow to help you get started with Actions
env:
  project_id: "toxltunjgufcifno"
  repo: "https://github.com/Meydan52/artemis.git"
  image_tag: "1.0.0"   #${{ GITHUB_BRANCH }}
  region: "us-central1"
  app_name: "artemis"

name: ContiniousDelivery

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3


      # Runs a set of commands using the runners shell
      - name: Clone a repo
        run: |
         git clone ${{ env.repo }}

      # Runs a set of commands using the runners shell
      - name: Switch Branches
        working-directory: ${{ env.app_name }}
        run: |
         git checkout ${{ env.image_tag }}
         ls -ls 


      # Runs a set of commands using the runners shell
      - name: Build Image
        working-directory: ${{ env.app_name }}
        run: |
         docker build -t ${{ env.app_name }}:${{ env.image_tag }} .


      # Runs a set of commands using the runners shell
      - name: Tag Image
        working-directory: ${{ env.app_name }}
        run: |
          docker image tag ${{ env.app_name }}:${{ env.image_tag }} ${{ env.region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.app_name }}:${{ env.image_tag }}


      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: gcloud version 



      - name: Authentication to google account
        run: |
          gcloud auth activate-service-account --key-file="service-account.json"
          gcloud config set project ${{ env.project_id }}


      - name: Authentication to repo
        run: |
          gcloud auth configure-docker  ${{ env.region }}-docker.pkg.dev

      # Runs a set of commands using the runners shell
      - name: Push Image
        working-directory: ${{ env.app_name }}
        run: |
          docker push ${{ env.region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.app_name }}/${{ env.app_name }}:${{ env.image_tag }}     
